.TH "src/can.h" 3 "Thu Jul 7 2022" "Version v0.1" "Engine Data Logger (EDL)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/can.h \- Header file for CAN parsing\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <net/if\&.h>\fP
.br
\fC#include <linux/can\&.h>\fP
.br
\fC#include <linux/can/raw\&.h>\fP
.br
\fC#include <sys/ioctl\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'error_handling\&.h'\fP
.br
\fC#include 'definitions\&.h'\fP
.br
\fC#include <errno\&.h>\fP
.br
\fC#include 'imu_can\&.h'\fP
.br
\fC#include 'ignitech_can\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "bool \fBcan_sock_connect\fP (int can_s, char const *can_arg)"
.br
.RI "Function to simplify connecting to CAN\&. "
.ti -1c
.RI "void \fBcan_parse\fP (const can_frame &frame, \fBbike_data\fP &log_data)"
.br
.RI "Function to extract data from CAN frames\&. "
.in -1c
.SH "Detailed Description"
.PP 
Header file for CAN parsing\&. 


.SH "Function Documentation"
.PP 
.SS "void can_parse (const can_frame & frame, \fBbike_data\fP & log_data)"

.PP
Function to extract data from CAN frames\&. This function takes CAN frames, parses them and puts the data into the right place\&.
.PP
\fBNote\fP
.RS 4
What is a note?
.RE
.PP
\fBParameters\fP
.RS 4
\fIframe\fP A can_frame struct (linux/can\&.h) that already contains a valid recieved frame\&. 
.br
\fIlog_data\fP A structure to store parsed data into\&.
.RE
.PP
\fBReturns\fP
.RS 4
Nothing
.RE
.PP
\fBReturn values\fP
.RS 4
\fINotImplemented\fP 
.br
\fIERR_SUCCESS\fP The function is successfully executed 
.br
\fIERR_FAILURE\fP An error occurred 
.RE
.PP
Default if can_id is not in the switch print out message details
.SS "bool can_sock_connect (int can_s, char const * can_arg)"

.PP
Function to simplify connecting to CAN\&. Handles IOCTLs and various other tasks to connect to CAN device by name Lots of otherwise boilerplate code
.PP
\fBNote\fP
.RS 4
Contains specific usage details, may not be suitably reusable\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIcan_s\fP Socket identifier 
.br
\fIcan_arg\fP CAN interface name\&. Gets blindly copied to ifreq\&.ifr_name\&.
.RE
.PP
\fBReturns\fP
.RS 4
True if successful, or FALSE if error\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Engine Data Logger (EDL) from the source code\&.
